{"pageProps":{"note":{"id":"qgh5ypgf2ed0blahec22bl7","title":"ORMs","desc":"","updated":1668100313380,"created":1668097443787,"custom":{},"fname":"database.orm","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"f7aedc3b253a12a71788ecb9d24ace8c","links":[{"from":{"fname":"database","id":"cij49qs329muip03oop0wcu","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":3,"column":29,"offset":52},"end":{"line":3,"column":45,"offset":68},"indent":[]},"value":"database.orm"}],"anchors":{"object-relational-mappers-orms":{"type":"header","text":"Object Relational Mappers (ORMs)","value":"object-relational-mappers-orms","line":8,"column":0,"depth":2},"orm-tools-for-python":{"type":"header","text":"ORM Tools For Python","value":"orm-tools-for-python","line":11,"column":0,"depth":2},"example-implementation":{"type":"header","text":"Example Implementation","value":"example-implementation","line":21,"column":0,"depth":2},"schema":{"type":"header","text":"Schema","value":"schema","line":30,"column":0,"depth":2},"baserepo":{"type":"header","text":"BaseRepo","value":"baserepo","line":95,"column":0,"depth":2},"todorepo":{"type":"header","text":"TodoRepo","value":"todorepo","line":141,"column":0,"depth":2},"todorepotest":{"type":"header","text":"TodoRepoTest","value":"todorepotest","line":157,"column":0,"depth":2}},"children":[],"parent":"cij49qs329muip03oop0wcu","data":{}},"body":"<h1 id=\"orms\">ORMs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#orms\"></a></h1>\n<h2 id=\"object-relational-mappers-orms\">Object Relational Mappers (ORMs)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#object-relational-mappers-orms\"></a></h2>\n<p>An object-relational mapper (ORM) is a code library that automates the transfer of data stored in relational database tables into objects that are more commonly used in application code.</p>\n<h2 id=\"orm-tools-for-python\">ORM Tools For Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#orm-tools-for-python\"></a></h2>\n<ol>\n<li><a href=\"https://www.sqlalchemy.org/\">SQLAlchemy</a></li>\n<li><a href=\"http://docs.peewee-orm.com/en/latest/\">Peewee</a></li>\n<li><a href=\"https://docs.djangoproject.com/en/dev/topics/db/\">The Django ORM</a></li>\n<li><a href=\"https://ponyorm.org/\">PonyORM</a></li>\n<li><a href=\"http://sqlobject.org/\">SQLObject</a></li>\n<li><a href=\"https://tortoise-orm.readthedocs.io/en/latest/\">Tortoise ORM</a></li>\n</ol>\n<p>ORMs @ Full Stack Python <a href=\"https://www.fullstackpython.com/object-relational-mappers-orms.html\">link</a></p>\n<h2 id=\"example-implementation\">Example Implementation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example-implementation\"></a></h2>\n<p>To-do List App [<a href=\"https://hackernoon.com/building-a-to-do-list-app-with-python-data-access-layer-with-sqlalchemy\">Rodolfo Campos, hackernoon.com, Oct. 15, 2021</a>]</p>\n<p>The actual implementation has the following components:</p>\n<ol>\n<li>Schema. Defines the database schema and provides connections wrapped in a Transaction Manager that keeps the database conversational state.</li>\n<li>BasRepo. Itâ€™s an abstract repository that implements the main 4 operations of a simple CRUD. Assuming that every table uses an auto-increment id field.</li>\n<li>UserRepo and tests. Extends BaseRepo for Users.</li>\n<li>TodRepo and tests. Extends BaseRepo for To-dos.</li>\n</ol>\n<h2 id=\"schema\">Schema<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#schema\"></a></h2>\n<p>About the implementation:</p>\n<ul>\n<li>Uses an env variable for creating the engine</li>\n<li>Defines the DB schema</li>\n<li>Offers methods to create and drop the DB schema</li>\n<li>Offers a Context Manager (TransactionManager) that wraps the connection and handles the DB conversational state. Easy to use with Python with statements.</li>\n</ul>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n    create_engine<span class=\"token punctuation\">,</span> \n    Boolean<span class=\"token punctuation\">,</span>\n    Column<span class=\"token punctuation\">,</span> \n    ForeignKey<span class=\"token punctuation\">,</span>\n    Integer<span class=\"token punctuation\">,</span> \n    MetaData<span class=\"token punctuation\">,</span> \n    String<span class=\"token punctuation\">,</span>\n    Table\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>engine <span class=\"token operator\">=</span> create_engine<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"DB_URI\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> echo<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> future<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>metadata <span class=\"token operator\">=</span> MetaData<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>tables <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__generate_tables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_transaction</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> TransactionManager<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>        \n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_all_tables</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">.</span>create_all<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">drop_all_tables</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">.</span>drop_all<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__generate_tables</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'todo'</span><span class=\"token punctuation\">:</span> Table<span class=\"token punctuation\">(</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span> <span class=\"token punctuation\">,</span> autoincrement<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">,</span> ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'user.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">,</span> Boolean<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'user'</span><span class=\"token punctuation\">:</span> Table<span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span> <span class=\"token punctuation\">,</span> autoincrement<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                Column<span class=\"token punctuation\">(</span><span class=\"token string\">'fullname'</span><span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TransactionManager</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>schema <span class=\"token operator\">=</span> schema\n        self<span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> traceback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2 id=\"baserepo\">BaseRepo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#baserepo\"></a></h2>\n<p>About the implementation:</p>\n<ul>\n<li>Assumes that the table is defined in the schema and has an auto-increment id field.</li>\n<li>Separates insert from update. You could implement just a save operation, similar to an upsert.</li>\n<li>Returns cursors when finding all, not an array. Useful when handling several rows.</li>\n</ul>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n<span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> insert<span class=\"token punctuation\">,</span> select<span class=\"token punctuation\">,</span> update\n<span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>exc <span class=\"token keyword\">import</span> InvalidRequestError\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BaseRepo</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>conn <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>conn\n        self<span class=\"token punctuation\">.</span>schema <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>schema\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">find_all</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        stmt <span class=\"token operator\">=</span> select<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_get_table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>stmt<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">find_by_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        table <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        stmt <span class=\"token operator\">=</span> select<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n        res <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>stmt<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        table <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        stmt <span class=\"token operator\">=</span> insert<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n        res <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>stmt<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>inserted_primary_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        prev_user <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>find_by_id<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> prev_user<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> InvalidRequestError<span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid id'</span><span class=\"token punctuation\">)</span>\n        stmt <span class=\"token operator\">=</span> update<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_get_table<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>stmt<span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_get_table</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n</code></pre>\n<h2 id=\"todorepo\">TodoRepo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#todorepo\"></a></h2>\n<p>About the implementation:</p>\n<ul>\n<li>Extends BaseRepo.</li>\n<li>Implements the only required method that returns the corresponding table from the Schema.</li>\n<li>Any specific data access methods should be implemented here.</li>\n</ul>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> base_repo <span class=\"token keyword\">import</span> BaseRepo\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TodoRepo</span><span class=\"token punctuation\">(</span>BaseRepo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_get_table</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>tables<span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"todorepotest\">TodoRepoTest<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#todorepotest\"></a></h2>\n<p>About the implementation:</p>\n<ul>\n<li>Uses in-memory sqlite DB, injected via env variables.</li>\n<li>Groups in classes tests per each method in TodoRepo.</li>\n<li>Creates a new schema per test.</li>\n<li>Enables foreign constraints.</li>\n</ul>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pytest\n<span class=\"token keyword\">from</span> sqlalchemy <span class=\"token keyword\">import</span> event<span class=\"token punctuation\">,</span> insert<span class=\"token punctuation\">,</span> select\n<span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>exc <span class=\"token keyword\">import</span> IntegrityError<span class=\"token punctuation\">,</span> InvalidRequestError\n\n<span class=\"token keyword\">from</span> schema <span class=\"token keyword\">import</span> Schema\n<span class=\"token keyword\">from</span> todo_repo <span class=\"token keyword\">import</span> TodoRepo\n\n<span class=\"token decorator annotation punctuation\">@pytest<span class=\"token punctuation\">.</span>fixture</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">schema</span><span class=\"token punctuation\">(</span>monkeypatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    monkeypatch<span class=\"token punctuation\">.</span>setenv<span class=\"token punctuation\">(</span><span class=\"token string\">\"DB_URI\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sqlite://\"</span><span class=\"token punctuation\">)</span>\n    schema <span class=\"token operator\">=</span> Schema<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    _enable_foreign_constraints<span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span>\n    schema<span class=\"token punctuation\">.</span>create_all_tables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> schema\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">_enable_foreign_constraints</span><span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_fk_pragma_on_connect</span><span class=\"token punctuation\">(</span>dbapi_con<span class=\"token punctuation\">,</span> con_record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        dbapi_con<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">'pragma foreign_keys=ON'</span><span class=\"token punctuation\">)</span>\n    event<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span>schema<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">'connect'</span><span class=\"token punctuation\">,</span> _fk_pragma_on_connect<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTodoRepo_find_all</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_multiple_todos</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            todos <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description a'</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description b'</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            todos <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>find_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTodoRepo_find_by_id</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_todo_exists</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            todo <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>find_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> todo<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todo<span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todo<span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description a'</span>\n            <span class=\"token keyword\">assert</span> todo<span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_todo_does_not_exists</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            todo <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>find_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> todo <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTodoRepo_insert</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_auto_increment_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            table <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>tables<span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span>\n            todos <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">id</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description a'</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_set_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            table <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>tables<span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span>\n            todos <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">99</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description a'</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_invalid_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">,</span> pytest<span class=\"token punctuation\">.</span>raises<span class=\"token punctuation\">(</span>IntegrityError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'invalid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_invalid_user_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">,</span> pytest<span class=\"token punctuation\">.</span>raises<span class=\"token punctuation\">(</span>IntegrityError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_duplicated_id</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">,</span> pytest<span class=\"token punctuation\">.</span>raises<span class=\"token punctuation\">(</span>IntegrityError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            repo <span class=\"token operator\">=</span> TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span>\n            repo<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            repo<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTodoRepo_update</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_todo_exists</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">:</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname a'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'b@test.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fullname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'fullname b'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            insert_obj<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> <span class=\"token string\">'todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            table <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>tables<span class=\"token punctuation\">[</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">]</span>\n            todos <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>todos<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'description'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'description b'</span>\n            <span class=\"token keyword\">assert</span> todos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'active'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_when_todo_does_not_exists</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> schema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">with</span> schema<span class=\"token punctuation\">.</span>create_transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tx<span class=\"token punctuation\">,</span> pytest<span class=\"token punctuation\">.</span>raises<span class=\"token punctuation\">(</span>InvalidRequestError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            TodoRepo<span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'active'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">insert_obj</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">,</span> table_name<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    table <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">.</span>tables<span class=\"token punctuation\">[</span>table_name<span class=\"token punctuation\">]</span>\n    stmt <span class=\"token operator\">=</span> insert<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n    tx<span class=\"token punctuation\">.</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>stmt<span class=\"token punctuation\">)</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/notes/cij49qs329muip03oop0wcu\">Database</a></li>\n</ul>","noteIndex":{"id":"root","title":"Zhirui Luo's Study Notes","desc":"","updated":1668118900608,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"a69d5be4dfe784efed2a85af0b39b156","links":[{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"Dendron"},"value":"leetcode","position":{"start":{"line":6,"column":3,"offset":70},"end":{"line":6,"column":15,"offset":82},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"leetcode"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"Dendron"},"value":"database","position":{"start":{"line":7,"column":3,"offset":85},"end":{"line":7,"column":15,"offset":97},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"database"}},{"type":"wiki","from":{"fname":"root","id":"root","vaultName":"Dendron"},"value":"designpattern","position":{"start":{"line":8,"column":3,"offset":100},"end":{"line":8,"column":20,"offset":117},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"designpattern"}}],"anchors":{"hi-there":{"type":"header","text":"Hi, there!","value":"hi-there","line":8,"column":0,"depth":1},"this-is-a-website-for-my-study-notes":{"type":"header","text":"This is a website for my study notes.","value":"this-is-a-website-for-my-study-notes","line":9,"column":0,"depth":2},"contents":{"type":"header","text":"Contents","value":"contents","line":11,"column":0,"depth":2}},"children":["cij49qs329muip03oop0wcu","ohshp0xxd5vn3edsgw59cjq","lupic2fhrxv5ory6kjlfu08"],"parent":null,"data":{},"body":"\n# Hi, there!\n## This is a website for my study notes.\n\n## Contents\n- [[leetcode]]\n- [[database]]\n- [[designpattern]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Zhirui Luo's Study Notes","description":"Personal Knowledge Space","author":"Zhirui Luo"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/notes","siteUrl":"https://zhiruiluo.github.io","ga":{"tracking":"G-VH64NJ4XGS"},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}